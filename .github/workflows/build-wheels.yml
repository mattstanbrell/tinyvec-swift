name: Build Python Package

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build_package:
    name: Build package on ${{ matrix.os }} ${{ matrix.arch || '' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        include:
          - os: ubuntu-latest
          - os: windows-latest
          - os: macos-latest
            arch: x86_64
          - os: macos-latest
            arch: arm64

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install numpy build setuptools wheel

      # Set up system dependencies for Linux
      - name: Set up system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc g++ make

      # Configure macOS architecture-specific environment
      - name: Configure macOS architecture
        if: runner.os == 'macOS'
        run: |
          # Set architecture-specific environment variables
          if [ "${{ matrix.arch }}" == "arm64" ]; then
            echo "MACOSX_DEPLOYMENT_TARGET=11.0" >> $GITHUB_ENV
            echo "ARCHFLAGS=-arch arm64" >> $GITHUB_ENV
          else
            echo "MACOSX_DEPLOYMENT_TARGET=10.9" >> $GITHUB_ENV
            echo "ARCHFLAGS=-arch x86_64" >> $GITHUB_ENV
          fi

      # Build extension modules first
      - name: Build extensions
        working-directory: ./bindings/python
        run: python setup.py build_ext

      # Use build to create both wheel and sdist
      - name: Build package on ${{ matrix.os }} ${{ matrix.arch || '' }} Python ${{ matrix.python-version }}
        working-directory: ./bindings/python
        run: python -m build

      # Upload built packages as artifacts
      - name: Upload packages
        uses: actions/upload-artifact@v4
        with:
          name: packages-${{ matrix.os }}${{ matrix.arch && format('-{0}', matrix.arch) || '' }}
          path: ./bindings/python/dist/*
          retention-days: 14
