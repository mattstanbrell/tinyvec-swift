name: Build Wheels for Testing

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main]
  # Allow manual trigger from the Actions tab
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        # Python package subfolder
        working-directory: ./bindings/python
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.11"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.16.5

      - name: Debug package structure
        run: |
          echo "Current directory: $(pwd)"
          ls -la
          echo "------- pyproject.toml -------"
          cat pyproject.toml || echo "No pyproject.toml found"
          echo "------- setup.py -------"
          cat setup.py || echo "No setup.py found"
          echo "------- Package structure -------"
          find . -type f -name "*.py" | sort

      - name: Build wheels
        run: |
          set -x  # Enable verbose mode for bash (Linux/macOS)
          python -m cibuildwheel --output-dir wheelhouse --verbose
        if: runner.os != 'Windows'
        env:
          CIBW_BUILD: "cp311-*" # Only build for Python 3.11
          CIBW_ARCHS_MACOS: "x86_64 arm64" # Build for both Intel and M1 Macs
          CIBW_BEFORE_BUILD_WINDOWS: "pip install setuptools wheel numpy"
          CIBW_BEFORE_BUILD_MACOS: "pip install setuptools wheel numpy"
          CIBW_BEFORE_BUILD_LINUX: "pip install setuptools wheel numpy"
          CIBW_SKIP: "pp* *musllinux*"
          # If your C source files are in a parent directory, add package dir config
          CIBW_ENVIRONMENT: "SETUPTOOLS_SCM_PRETEND_VERSION=0.1.0"
          # If needed, specify the relative path to C sources
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: ""

      - name: Build wheels (Windows)
        run: |
          python -m cibuildwheel --output-dir wheelhouse --verbose
        if: runner.os == 'Windows'
        env:
          CIBW_BUILD: "cp311-*" # Only build for Python 3.11
          CIBW_BEFORE_BUILD_WINDOWS: "pip install setuptools wheel numpy"
          CIBW_SKIP: "pp* *musllinux*"
          # If your C source files are in a parent directory, add package dir config
          CIBW_ENVIRONMENT: "SETUPTOOLS_SCM_PRETEND_VERSION=0.1.0"
          # If needed, specify the relative path to C sources
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: ""

      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./bindings/python/wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    defaults:
      run:
        # Set the working directory to the Python package subfolder
        working-directory: ./bindings/python
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install build wheel setuptools

      - name: Build sdist
        run: |
          python -m build --sdist

      - name: Upload sdist as artifact
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: ./bindings/python/dist/*.tar.gz
